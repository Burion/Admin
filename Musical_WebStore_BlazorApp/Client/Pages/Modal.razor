@using Admin.ResultModels
@using Admin.ViewModels
@inject HttpClient client
<EditForm Model="@addOrderModel" OnValidSubmit="@AddOrder">
<label>Write text for order:</label>
<InputText @bind-Value="addOrderModel.Text" type="text" class="form-control bg-gray border-1" placeholder="Write your message..." aria-label="Search" aria-describedby="basic-addon2"/>
<InputSelect @bind-Value="addOrderModel.DeviceId" class="form-control">
    @if(sensors == null)
    {
        <text>Loading...</text>
    }
    else
    @foreach(var sensor in sensors)
    {
    <option value="@sensor.Id">@sensor.Name</option>
    }
</InputSelect>
<InputSelect @bind-Value="addOrderModel.OrderTypeId" class="form-control">
    @if(ordertypes == null)
    {
        <text>Loading...</text>
    }
    else
    @foreach(var ordert in ordertypes)
    {
    <option value="@ordert.Id.ToString()">@ordert.Name</option>
    }
</InputSelect>
<button type="submit" class="btn btn-primary">Make Order</button>
</EditForm>
<input class="form-control">


@code
{
    [CascadingParameter] ModalParameters Parameters {get;set;}
    public int ServiceId {get;set;}
    AddOrderModel addOrderModel = new AddOrderModel();
    List<DeviceViewModel> sensors = null;
    List<OrderTypeViewModel> ordertypes = null;
    protected override async Task OnInitializedAsync()
    {
        ServiceId = Parameters.Get<int>("ServiceId");
        sensors = await client.GetJsonAsync<List<DeviceViewModel>>("api/locations/getdevices");
        ordertypes = await client.GetJsonAsync<List<OrderTypeViewModel>>("api/order/getordertypes");
    }
    protected void AddOrder()
    {
        addOrderModel.ServiceId = ServiceId;
        client.PostJsonAsync<AddOrderResult>("api/order/addorder", addOrderModel);
    }
}